{"version":3,"sources":["Overview.jsx","Summary.jsx","Header.jsx","ReactIdeogram.jsx","IdeogramHuman.jsx","IdeogramMouse.jsx","IdeogramEukaryotes.jsx","serviceWorker.js","index.js","App.jsx"],"names":["Overview","className","Component","Summary","props","href","page","pages","specialTitles","getPrevNextIndex","pageIndex","prevOrNext","numPages","length","console","log","Header","this","title","remainder","slice","replace","transformedName","toUpperCase","getTitle","indexOf","prevIndex","nextIndex","getPrevNextPages","prevPage","nextPage","sourceLink","to","ReactIdeogram","config","Object","assign","dataDir","container","Ideogram","createIdeogram","id","IdeogramHuman","organism","IdeogramM","organismGroups","name","organisms","IdeogramEukaryotes","handleInputChange","event","setState","target","history","push","search","params","location","org","split","chrHeight","rows","getChrHeightAndRows","state","map","group","key","scientificName","scientificNameSlug","toLowerCase","htmlFor","type","value","onChange","checked","chrWidth","showNonNuclearChromosomes","Boolean","window","hostname","match","ReactDOM","render","exact","path","component","IdeogramMouse","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAIqBA,E,iLAEjB,OACE,yBAAKC,UAAU,OAAf,qE,GAHgCC,a,eCFvB,SAASC,EAAQC,GAmM9B,MAlMkB,CAChB,MACE,6BACE,wHAEY,IACZ,uBAAGC,KAAK,iDAAR,mBAHA,4CAIwC,IACxC,uBAAGA,KAAK,4CAAR,cALA,+CAOA,wEAC2C,IAC3C,uBAAGA,KAAK,wCAAR,WAFA,cAEsE,IAFtE,4EAG0E,IAH1E,OAII,uBAAGA,KAAK,gBAAR,iBAJJ,QAIkD,IAClD,uBAAGA,KAAK,iBAAR,kBALA,MAQJ,MACE,6BACE,2FAEJ,WACE,6BACE,+FACoE,IADpE,mBAEkB,uBAAGA,KAAK,yCAAR,iBAFlB,MAKJ,UACE,6BACE,wEAEJ,iBACE,6BACE,iMAGmB,uBAAGA,KAAK,qBAAR,sBAHnB,MAMJ,oBACE,6BACE,6LAKJ,oBACE,6BACE,8CACkB,uBAAGA,KAAK,yCAAR,SADlB,8BAIJ,uBACE,6BACE,8HAIJ,qBACE,6BACE,mCACO,uBAAGA,KAAK,iHAAR,sBADP,2CAGW,uBAAGA,KAAK,6BAAR,8BAHX,MAMJ,4BACE,6BACE,kCACM,uBAAGA,KAAK,yBAAR,qDADN,2GAIE,uBAAGA,KAAK,mDAAR,8BAIN,uBACE,6BACE,8FAEE,uBAAGA,KAAK,oIAAR,WAFF,MAKJ,wBACE,6BACE,qKAG4B,uBAAGA,KAAK,2BAAR,2BAH5B,MAMJ,uBACE,6BACE,8LAKJ,sBACE,6BACE,6MAKJ,0BACE,6BACE,6BAIJ,qBACE,6BACE,sDAC0B,uBAAGA,KAAK,mDAAR,gBAD1B,oDAGY,uBAAGA,KAAK,8CAAR,YAHZ,eAKE,uBAAGA,KAAK,4BAAR,wBALF,0EASJ,eACE,6BACE,+QAGA,wsBAGA,qNAIJ,cACE,8BAEF,MACE,6BACE,6BAIJ,eACE,6BACE,wJAKJ,wBACE,6BACE,wEAEE,6CAFF,cAEkC,8CAFlC,UAGE,6BAHF,kDAKE,4BACE,oEACA,qEAIR,uBACE,6BACE,wEAEE,6CAFF,cAEkC,8CAFlC,UAGE,6BAHF,4CAI2C,6BACzC,4BACE,yEACA,6EAIR,gBACE,6BACE,wGAEW,uBAAGA,KAAK,oBAAR,qBAFX,MAKJ,oBACE,6BACE,uMAOWD,EAAME,MC9LzB,IAAMC,EAAQ,CACZ,QACA,QACA,cAwBIC,EAAgB,CACpB,iBAAkB,eAGpB,SAASC,EAAiBC,EAAWC,GACnC,IAAMC,EAAWL,EAAMM,OACvB,OAAkB,IAAdH,GAAkC,SAAfC,GACrBG,QAAQC,IAAIH,GACLA,EAAW,GACTF,IAAcE,EAAW,GAAoB,SAAfD,EAChC,EACiB,SAAfA,EACFD,EAAY,EACK,SAAfC,EACFD,EAAY,OADd,E,IAoCYM,E,iLAGjB,IAAMV,EAAOW,KAAKb,MAAME,KAClBY,EAVV,SAAkBZ,GAChB,IAAMa,EAAYb,EAAKc,MAAM,GAAGC,QAAQ,KAAM,KACxCC,EAAkBhB,EAAK,GAAGiB,cAAgBJ,EAChD,OAAOb,KAAQE,EAAgBA,EAAcF,GAAQgB,EAOrCE,CAASlB,GAFhB,EA3BX,SAA0BA,GACxB,IAAMI,EAAYH,EAAMkB,QAAQnB,GAC1BoB,EAAYjB,EAAiBC,EAAW,QACxCiB,EAAYlB,EAAiBC,EAAW,QAI9C,MAAO,CAHUH,EAAMmB,GACNnB,EAAMoB,IAyBQC,CAAiBtB,GAHvC,mBAGAuB,EAHA,KAGUC,EAHV,KAIDC,EAAU,iEAA6DzB,EAA7D,SAChB,OACE,gCACA,4BAAKY,EAAL,eACA,uBAAGb,KAAK,mBAAR,YAFA,MAE0C,IAC1C,kBAAC,IAAD,CAAM2B,GAAI,mBAAqBH,GAA/B,YAHA,OAG6D,IAC7D,kBAAC,IAAD,CAAMG,GAAI,mBAAqBF,GAA/B,QAJA,OAIyD,IACzD,kBAAC,IAAD,CAAME,GAAID,GAAV,UALA,IAKqC,IACrC,kBAAC5B,EAAD,CAASG,KAAMA,S,GAdeJ,a,QC/Ef+B,E,yLAGjB,IAAMC,EAASC,OAAOC,OAAO,CAC3BC,QAAS,4DACTC,UAAW,mBACVrB,KAAKb,OACR,IAAImC,IAASL,K,2CAIb,OAAOjB,KAAKuB,mB,0CAIZ,OAAOvB,KAAKuB,mB,+BAIZ,OACE,yBAAKC,GAAG,uB,GApB6BvC,aCAtBwC,E,iLAEjB,OACE,yBAAKzC,UAAU,OACb,kBAAC,EAAD,CAAQK,KAAK,UACb,kBAAC,EAAD,CAAeqC,SAAS,e,GALWzC,aCAtB0C,E,iLAEjB,OACE,yBAAK3C,UAAU,OACb,kBAAC,EAAD,CAAQK,KAAK,UACb,kBAAC,EAAD,CAAeqC,SAAS,e,GALOzC,aCAjC2C,EAAiB,CACrB,CACEC,KAAM,kBACNC,UAAW,CACT,CAAC,MAAO,qBACR,CAAC,MAAO,2BACR,CAAC,OAAQ,0BACT,CAAC,YAAa,eACd,CAAC,cAAe,wBAChB,CAAC,QAAS,8BAGd,CACED,KAAM,cACNC,UAAW,CACT,CAAC,aAAc,mBACf,CAAC,UAAW,kBACZ,CAAC,MAAO,eACR,CAAC,MAAO,gBAGZ,CACED,KAAM,SACNC,UAAW,CACT,CAAC,QAAS,YACV,CAAC,OAAQ,gBACT,CAAC,SAAU,wBACX,CAAC,SAAU,kBACX,CAAC,QAAS,kBACV,CAAC,cAAe,wBAGpB,CACED,KAAM,UACNC,UAAW,CACT,CAAC,WAAY,uBAGjB,CACED,KAAM,WACNC,UAAW,CACT,CAAC,mBAAoB,4B,IAsBNC,E,YAEnB,WAAY5C,GAAQ,IAAD,uBACjB,4CAAMA,KAkBR6C,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZ,SAAYD,EAAME,OAAOX,KAE3B,EAAKrC,MAAMiD,QAAQC,KAAK,CACtBC,OAAQ,QAAUL,EAAME,OAAOX,MAtBjC,IAAMe,EAAS,EAAKpD,MAAMqD,SAASF,OAE7BG,EAAiB,KAAXF,EAAgBA,EAAOG,MAAM,KAAK,GAAK,oBAEnD,EAAKvD,MAAMiD,QAAQC,KAAK,CACtBC,OAAQ,QAAUG,IAPH,MAnBrB,SAA6BA,GAC3B,IAAIE,EAAY,IACZC,EAAO,EAYX,MATU,2BAARH,GACQ,eAARA,GACQ,kBAARA,GACQ,wBAARA,IAEAE,EAAY,IACZC,EAAO,GAGF,CAACD,EAAWC,GAeSC,CAAoBJ,GAV7B,mBAUVE,EAVU,KAUCC,EAVD,YAYjB,EAAKE,MAAQ,CACX,SAAYL,EACZ,UAAaE,EACb,KAAQC,GAfO,E,sEA4BT,IAAD,OACP,OACE,yBAAKpB,GAAG,qBAAqBxC,UAAU,OACrC,kBAAC,EAAD,CAAQK,KAAK,eACb,wBAAImC,GAAG,iBACNI,EAAemB,KAAI,SAACC,GACnB,OACE,wBAAIC,IAAK,SAAWD,EAAMnB,MAAOmB,EAAMnB,KAAK,4BAC3CmB,EAAMlB,UAAUiB,KAAI,YAA6B,IAAD,mBAA1BlB,EAA0B,KAApBqB,EAAoB,KAEzCC,EAAqBD,EAAe9C,QAAQ,KAAM,KAAKgD,cAC7D,OACE,wBAAIH,IAAK,YAAcC,GACrB,2BAAOG,QAASF,GACd,2BACEG,KAAK,QAAQzB,KAAK,MAAM0B,MAAOJ,EAAoB3B,GAAI2B,EACvDK,SAAU,EAAKxB,kBACfyB,QAAS,EAAKX,MAAMpB,WAAayB,IAElCtB,EANH,KAMWqB,EANX,eAeV,yBAAK1B,GAAG,cACR,kBAAC,EAAD,CACEH,UAAU,aACVK,SAAU1B,KAAK8C,MAAMpB,SACrBgC,SAAU,GACVf,UAAW3C,KAAK8C,MAAMH,UACtBC,KAAM5C,KAAK8C,MAAMF,KACjBe,2BAA2B,S,GAjEW1E,a,gBCvD5B2E,QACW,cAA7BC,OAAOrB,SAASsB,UAEe,UAA7BD,OAAOrB,SAASsB,UAEhBD,OAAOrB,SAASsB,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCQD,WACb,OACE,kBAAC,IAAD,KACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMlD,GAAG,KAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,YAON,6BAGE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,wBAAwBC,UAAW3C,IAC/C,kBAAC,IAAD,CAAO0C,KAAK,SAASC,UAAWC,IAChC,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWrC,SDjC/B,MAASuC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f116600e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import Header from './Header';\n// import ReactIdeogram from './ReactIdeogram';\n\nexport default class Overview extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        This will show cards as in https://eweitz.github.io/ideogram.\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default function Summary(props) {\n  const summaries = {\n    'human':\n      <div>\n        <p>\n        A human genome is depicted below.  The grey and black bands in each chromosome \n        represent  {' '}\n        <a href=\"https://en.wikipedia.org/wiki/Heterochromatin\">heterochromatin</a>.\n        The pink region is the area around the {' '}\n        <a href=\"https://en.wikipedia.org/wiki/Centromere\">centromere</a>, and the blue represents variable regions.\n        </p>\n        <p>\n        This ideogram shows most chromosomes in a {' '}\n        <a href=\"https://en.wikipedia.org/wiki/Ploidy\">haploid</a> state for {' '}\n        simplicity.  For more accurate, diploid representation of human genomes, {' '}\n        see <a href=\"ploidy-basic\">Ploidy, basic</a> and {' '}\n        <a href=\"multiple-trio\">Multiple, trio</a>.\n        </p>\n      </div>,\n    'mouse':\n      <div>\n        <p>A mouse genome, with each chromosome rendered horizontally.</p>\n      </div>,\n    'eukaryotes':\n      <div>\n        <p>\n          Ideogram.js can display the genome of any hundreds of organisms, {' '}\n          using data from <a href=\"https://www.ncbi.nlm.nih.gov/assembly\">NCBI Assembly</a>.\n        </p>\n      </div>,\n    'orthologs':\n      <div>\n        <p>Compare gene locations across organisms.</p>\n      </div>,\n    'homology-basic':\n      <div>\n        <p>\n          Pseudoautosomal regions (PAR) are the only parts of chromosomes X and Y\n          that typically undergo genetic recombination.  PAR1 and PAR2 are depicted\n          below.  See also <a href=\"homology-advanced\">Compare, structure</a>.\n        </p>\n      </div>,\n    'homology-advanced':\n      <div>\n        <p>\n          Large-scale insertions, deletions, and inversions are represented below.\n          Focus on a particular large variation by clicking or hovering over a colored region.\n        </p>\n      </div>,\n    'annotations-basic':\n      <div>\n        <p>\n          The location of <a href=\"https://www.ncbi.nlm.nih.gov/gene/672\">BRCA1</a> is depicted here in red.\n        </p>\n      </div>,\n    'annotations-overlaid':\n      <div>\n        <p>\n          Large-scale structural variations (SVs) can be depicted using colored overlays, as seen below.\n        </p>\n      </div>,\n    'annotations-tracks':\n      <div>\n        <p>\n          1000 <a href=\"https://github.com/eweitz/ideogram/blob/ca64a3c51e1b5ecaae89d2422ffc408565743644/scripts/create_annots.py#L68\">\n          randomly generated</a> SNVs across the human genome. \n          See also <a href=\"annotations-track-filters\">Annotations, track filters</a>.\n        </p>\n      </div>,\n    'annotations-external-data':\n      <div>\n        <p>\n          The <a href=\"https://www.acmg.net/\">American College of Medical Genetics and\n          Genomics</a> (ACMG) recommends that laboratories performing clinical\n          sequencing seek and report certain mutations in\n          <a href=\"https://www.ncbi.nlm.nih.gov/clinvar/docs/acmg/\">the genes depicted\n          here.</a>\n        </p>\n      </div>,\n    'annotations-file-url':\n      <div>\n        <p>\n          Load a BED file by specifying its URL, and see genome-wide data.\n          <a href=\"?asm=GRCh37&annotsUrl=https://raw.githubusercontent.com/NCBI-Hackathons/Scan2CNV/master/files/201113910010_R08C02.PennCnvOut.bed\">Example</a>.\n        </p>\n      </div>,\n    'annotations-histogram':\n      <div>\n        <p>\n          Distribution of all human genes throughout the genome.\n          Filter all 20,000+ genes in &lt; 100 milliseconds below.\n          For a richer example, see <a href=\"differential-expression\">Differential expression</a>.\n        </p>\n      </div>,\n    'annotations-animated':\n      <div>\n        <p>\n          See genome-wide transitions in expression over time.\n          Below, changes in gene expression in mouse lung tissue over two years, in three influenza dosage cohorts.\n        </p>\n      </div>,\n    'annotations-heatmap':\n      <div>\n        <p>\n          All human genes, annotated in heatmaps.  The proximal heatmap for each chromosome shows gene distribution\n          by expression.  The distal heatmap shows gene distribution by type.\n        </p>\n      </div>,\n    'differential-expression':\n      <div>\n        <p>\n\n        </p>\n      </div>,\n    'geometry-collinear':\n      <div>\n        <p>\n          Gene expression in four <a href=\"https://en.wikipedia.org/wiki/Oligodendroglioma\">brain cancer</a>\n          samples, showing 1p and 19q deletions.  \n          Data from <a href=\"https://github.com/broadinstitute/inferCNV\">inferCNV</a>.  \n          Unlike the\n          <a href=\"annotations-heatmap.html\">parallel arrangement</a>, this ideogram is\n          collinear -- the chromosomes form a line together.\n        </p>\n      </div>,\n    'layout-small':\n      <div>\n        <p>\n        The small ideogram inset at left is an example of chromosome graphics surrounded by other content.  Instead of meaningless \"Lorem ipsum\" placeholder text, here is some background on the human reference genome assembly this ideogram depicts.\n        </p>\n        <p>\n        \"In 2004, the Human Genome Project (HGP) published a finished version (Build35) of the human genome assembly (1). This was a major accomplishment that represented over a decade of effort by more than a dozen institutions and resulted in the highest quality vertebrate genome ever produced and a new tool for understanding human biology. Despite this achievement, a limited number of gaps, sequence and tiling path errors remained in the reference assembly. Thus, at the conclusion of the HGP and the release of their final assembly version (Build36 (UCSC name: hg18)), the GRC was conceived as a mechanism for continued stewardship and improvement of the human reference assembly.\"\n        </p>\n        <p>\n        \"In 2009, the GRC produced an updated human assembly (GRCh37 (UCSC name: hg19)).\"  And in 2013, it produced the current major version of the human reference genome assembly, GRCh38.\n        </p>\n      </div>,\n    'layout-tabs':\n      <div>\n      </div>,\n    'brush':\n      <div>\n        <p>\n\n        </p>\n      </div>,\n    'ploidy-basic':\n      <div>\n        <p>\n          This diploid genome shows maternal (\"M\") and paternal (\"P\") chromosomes of\n          a karyotypically normal human female (46,XX).\n        </p>\n      </div>,\n    'ploidy-rearrangements':\n      <div>\n        <p>\n          This triploid banana genome is a hybrid of\n          <i>Musa acuminata</i> (\"A\") and <i>Musa balbisiana</i> (\"B\").\n          <br/>\n          Chromosomal rearrangements shown below include:\n          <ul>\n            <li>Arm gained in a copy of chromosome 1</li>\n            <li>Arm lost in a copy of chromosome 2</li>\n          </ul>\n        </p>\n      </div>,\n    'ploidy-recombination':\n      <div>\n        <p>\n          This triploid banana genome is a hybrid of\n          <i>Musa acuminata</i> (\"A\") and <i>Musa balbisiana</i> (\"B\").\n          <br/>\n          Recombination events shown below include:<br/>\n          <ul>\n            <li>Gene conversion in a copy of chromosome 1</li>\n            <li>Double crossover in copies of chromosome 2</li>\n          </ul>\n        </p>\n      </div>,\n    'multiple-trio':\n      <div>\n        <p>\n          Three diploid human genomes: a female, a male, and another male.\n          See also <a href=\"multiple-trio-sv\">Multiple, trio SV</a>.\n        </p>\n      </div>,\n    'multiple-primates':\n      <div>\n        <p>\n          Two genes are annotated on each genome below: APOB (red) and CTLA4 (blue).\n          Their locations give evidence of ancient chromosome fusions and shared\n          evolutionary origin.\n        </p>\n      </div>,\n  };\n  return summaries[props.page];\n};","import React, { Component } from 'react';\nimport {\n  Link\n} from 'react-router-dom';\n\nimport Summary from './Summary.jsx';\n\nconst pages = [\n  'human',\n  'mouse',\n  'eukaryotes',\n  // 'orthologs',\n  // 'homology-basic',\n  // 'homology-advanced',\n  // 'annotations-basic',\n  // 'annotations-overlaid',\n  // 'annotations-tracks',\n  // 'annotations-external-data',\n  // 'annotations-file-url',\n  // 'annotations-histogram',\n  // 'annotations-animated',\n  // 'annotations-heatmap',\n  // 'differential-expression',\n  // 'geometry-collinear',\n  // 'layout-small',\n  // 'layout-tabs',\n  // 'brush',\n  // 'ploidy-basic',\n  // 'ploidy-rearrangements',\n  // 'ploidy-recombination',\n  // 'multiple-trio',\n  // 'multiple-primates'\n];\n\nconst specialTitles = {\n  'homology-basic': 'Compare PAR'\n};\n\nfunction getPrevNextIndex(pageIndex, prevOrNext) {\n  const numPages = pages.length;\n  if (pageIndex === 0 && prevOrNext === 'prev') {\n    console.log(numPages)\n    return numPages - 1;\n  } else if (pageIndex === numPages - 1 && prevOrNext === 'next') {\n    return 0;\n  } else if (prevOrNext === 'next') {\n    return pageIndex + 1;\n  } else if (prevOrNext === 'prev') {\n    return pageIndex - 1;\n  }\n}\n\n/**\n * Gets names of previous and next pages, used in header navigation links\n * \n * @param {String} page Name of page in slug form, e.g. 'human', 'multiple-primates'\n * @return {Array} Names of previous and next pages\n */\nfunction getPrevNextPages(page) {\n  const pageIndex = pages.indexOf(page);\n  const prevIndex = getPrevNextIndex(pageIndex, 'prev');\n  const nextIndex = getPrevNextIndex(pageIndex, 'next');\n  const prevPage = pages[prevIndex];\n  const nextPage = pages[nextIndex];\n\n  return [prevPage, nextPage];\n}\n\n/**\n * Return the title of the page\n * \n * If page has a special title -- titles that aren't trivial transformations\n * of the page name -- then return that (e.g. homology-basic -> Compare PAR).\n * If not, return the trivially transformed name (e.g. mouse -> Mouse).\n *\n * @param {String} page Name of page in slug form, e.g. 'human', 'multiple-primates'\n */\nfunction getTitle(page) {\n  const remainder = page.slice(1).replace(/-/g, ' ')\n  const transformedName = page[0].toUpperCase() + remainder;\n  return page in specialTitles ? specialTitles[page] : transformedName;\n}\n\nexport default class Header extends Component {\n\n  render() {\n    const page = this.props.page;\n    const title = getTitle(page);\n    const [prevPage, nextPage] = getPrevNextPages(page);\n    const sourceLink = `https://github.com/eweitz/ideogram-react/blob/gh-pages/${page}.html`;\n    return (\n      <header>\n      <h1>{title} | Ideogram</h1>\n      <a href=\"/ideogram-react\">Overview</a> | {' '}\n      <Link to={'/ideogram-react/' + prevPage}>Previous</Link> |  {' '}\n      <Link to={'/ideogram-react/' + nextPage}>Next</Link> |  {' '}\n      <Link to={sourceLink}>Source</Link> {' '}\n      <Summary page={page}/>\n      </header>\n    )\n  }\n};","import React, { Component } from 'react';\n\nimport Ideogram from 'ideogram';\n\nexport default class ReactIdeogram extends Component {\n\n  createIdeogram() {\n    const config = Object.assign({\n      dataDir: 'https://unpkg.com/ideogram@1.16.0/dist/data/bands/native/',\n      container: '#ideo-container'\n    }, this.props);\n    new Ideogram(config);\n  }\n\n  componentDidUpdate() {\n    return this.createIdeogram();\n  }\n\n  componentDidMount() {\n    return this.createIdeogram();\n  }\n\n  render() {\n    return (\n      <div id=\"ideo-container\"></div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from './Header';\nimport ReactIdeogram from './ReactIdeogram';\n\nexport default class IdeogramHuman extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header page='human'/>\n        <ReactIdeogram organism='human'/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from './Header';\nimport ReactIdeogram from './ReactIdeogram';\n\nexport default class IdeogramM extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header page='mouse'/>\n        <ReactIdeogram organism='mouse'/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from './Header';\nimport ReactIdeogram from './ReactIdeogram';\n\nconst organismGroups = [\n  {\n    name: 'Model organisms', \n    organisms: [\n      ['Rat', 'Rattus norvegicus'],\n      ['Fly', 'Drosophila melanogaster'],\n      ['Worm', 'Caenorhabditis elegans'],\n      ['Zebrafish', 'Danio rerio'],\n      ['Thale cress', 'Arabidopsis thaliana'],\n      ['Yeast', 'Saccharomyces cerevisiae'],\n    ]\n  },\n  {\n    name: 'Vertebrates', \n    organisms: [\n      ['Chimpanzee', 'Pan troglodytes'],\n      ['Macaque', 'Macaca mulatta'],\n      ['Cat', 'Felis catus'],\n      ['Pig', 'Sus scrofa'],\n    ]\n  },\n  {\n    name: 'Plants', \n    organisms: [\n      ['Maize', 'Zea mays'],\n      ['Rice', 'Oryza sativa'],\n      ['Tomato', 'Solanum lycopersicum'],\n      ['Banana', 'Musa acuminata'],\n      ['Grape', 'Vitis vinifera'],\n      ['Green algae', 'Micromonas commoda'],\n    ]\n  },\n  {\n    name: 'Insects', \n    organisms: [\n      ['Mosquito', 'Anopheles gambiae'],\n    ]\n  },\n  {\n    name: 'Protozoa', \n    organisms: [\n      ['Malaria parasite', 'Plasmodium falciparum'],\n    ]\n  },\n];\n\nfunction getChrHeightAndRows(org) {\n  let chrHeight = 400;\n  let rows = 1;\n\n  if (\n    org === 'canis-lupus-familiaris' ||\n    org === 'bos-taurus' ||\n    org === 'gallus-gallus' ||\n    org === 'leishmania-donovani'\n  ) {\n    chrHeight = 200;\n    rows = 2;\n  }\n\n  return [chrHeight, rows];\n}\n\nexport default class IdeogramEukaryotes extends Component {\n\n  constructor(props) {\n    super(props);\n    const params = this.props.location.search;\n\n    const org = params !== '' ? params.split('=')[1] : 'rattus-norvegicus';\n\n    this.props.history.push({\n      search: '?org=' + org\n    });\n\n    const [chrHeight, rows] = getChrHeightAndRows(org);\n\n    this.state = {\n      'organism': org,\n      'chrHeight': chrHeight,\n      'rows': rows,\n    };\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      'organism': event.target.id\n    });\n    this.props.history.push({\n      search: '?org=' + event.target.id\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"eukaryotes-example\" className=\"App\">\n        <Header page='eukaryotes'/>\n        <ul id=\"organism-list\">\n        {organismGroups.map((group) => {\n          return (\n            <li key={'group-' + group.name}>{group.name}<ul>\n            {group.organisms.map(([name, scientificName]) => {\n              // e.g. Mus musculus -> mus-musculus\n              const scientificNameSlug = scientificName.replace(/ /g, '-').toLowerCase();\n              return (\n                <li key={'organism-' + scientificName}>\n                  <label htmlFor={scientificNameSlug}>\n                    <input\n                      type='radio' name='org' value={scientificNameSlug} id={scientificNameSlug}\n                      onChange={this.handleInputChange}\n                      checked={this.state.organism === scientificNameSlug}\n                    />\n                    {name} ({scientificName})\n                  </label>\n                </li>\n              );\n            })}\n            </ul></li>\n          )\n        })}\n        </ul>\n        <div id='container'></div>\n        <ReactIdeogram\n          container='#container'\n          organism={this.state.organism}\n          chrWidth={10}\n          chrHeight={this.state.chrHeight}\n          rows={this.state.rows}\n          showNonNuclearChromosomes={true}\n        />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Overview from './Overview';\nimport IdeogramHuman from './IdeogramHuman';\nimport IdeogramMouse from './IdeogramMouse';\nimport IdeogramEukaryotes from './IdeogramEukaryotes';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nexport default function App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Overview</Link>\n          </li>\n          <li>\n            <Link to=\"/human\">Human</Link>\n          </li>\n          {/* <li>\n            <Link to=\"/Eukaryotes\">Eukaryotes</Link>\n          </li> */}\n        </ul>\n      </nav>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Overview />\n          </Route>\n          <Route path=\"/ideogram-react/human\" component={IdeogramHuman} />\n          <Route path=\"/mouse\" component={IdeogramMouse} />\n          <Route path=\"/eukaryotes\" component={IdeogramEukaryotes} />\n          {/* <Route path=\"/Eukaryotes\">\n            <Eukaryotes />\n          </Route> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}"],"sourceRoot":""}